<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiBrechoRamires</name>
    </assembly>
    <members>
        <member name="M:ApiBrechoRamires.Controllers.UsuarioController.LoginAsync(System.String,System.String)">
            <summary>
            Login
            </summary>
            <param name="email">Email</param>
            <param name="senha">Senha</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna a autenticação do sistema.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:ApiBrechoRamires.Controllers.UsuarioController.GetUserAsync(System.UInt32,System.UInt32)">
            <summary>
            Lista de usuário
            </summary>
            <param name="pageNumber">pageNumber</param>
            <param name="pageSize">pageSize</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna a lista de usuários cadastrados.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:ApiBrechoRamires.Controllers.UsuarioController.PostUserAsync(ApiBrechoRamires.Models.LoginModel)">
            <summary>
            Registrar um usuário
            </summary>
            <returns>Objeto JSON</returns>
            <response code="200">Registra um novo usuário.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:ApiBrechoRamires.Controllers.UsuarioController.DeleteUserAsync(System.Int32)">
            <summary>
            Apagar usuário pelo código
            </summary>
            <param name="id">Código do usuário</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna o produto deletado.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:ApiBrechoRamires.Controllers.UsuarioController.EditUserAsync(System.Int32,ApiBrechoRamires.Models.LoginModel)">
            <summary>
            Editar usuário pelo código
            </summary>
            <param name="id">Código do usuário</param>
            <param name="model">Modelo de dados do usuário</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna o produto deletado.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="T:ApiBrechoRamires.Migrations.Vendas">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.Vendas.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.Vendas.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.Vendas.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiBrechoRamires.Migrations.CreateTable">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiBrechoRamires.Migrations.CreateDB">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDB.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDB.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDB.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiBrechoRamires.Migrations.CreateDB1">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDB1.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDB1.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDB1.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiBrechoRamires.Migrations.CreateDb2">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDb2.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDb2.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDb2.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiBrechoRamires.Migrations.CreateDb3">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDb3.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDb3.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreateDb3.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiBrechoRamires.Migrations.Teste">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.Teste.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.Teste.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.Teste.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiBrechoRamires.Migrations.Teste1">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.Teste1.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.Teste1.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.Teste1.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiBrechoRamires.Migrations.CreatingVendaProdutoTable">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreatingVendaProdutoTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreatingVendaProdutoTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreatingVendaProdutoTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiBrechoRamires.Migrations.CreatingLoginTable">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreatingLoginTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreatingLoginTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreatingLoginTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiBrechoRamires.Migrations.CreatingLoginTable1">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreatingLoginTable1.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreatingLoginTable1.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiBrechoRamires.Migrations.CreatingLoginTable1.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProdutoController.GetProdutosAsync(System.UInt32,System.UInt32)">
            <summary>
            Lista de Produtos Cadastrados
            </summary>
            <param name="pageNumber">pageNumber</param>
            <param name="pageSize">pageSize</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna a lista de produtos cadastrados.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:ProdutoController.GetProdutoByIdAsync(System.String)">
            <summary>
            Produto pelo Código
            </summary>
            <param name="codigo">Código do produto</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna o produto pelo código.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:ProdutoController.PostProdutoAsync(ApiBrechoRamires.Models.ProdutoModel)">
            <summary>
            Registrar um produto
            </summary>
            <returns>Objeto JSON</returns>
            <response code="200">Registra um novo produto.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:ProdutoController.DeleteProdutoAsync(System.String)">
            <summary>
            Apagar Produto pelo Código
            </summary>
            <param name="codigo">Código do produto</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna o produto deletado.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:ProdutoController.EditProdutoAsync(System.String,ApiBrechoRamires.Models.ProdutoModel)">
            <summary>
            Editar Produto pelo Código
            </summary>
            <param name="codigo">Código do produto</param>
            <param name="model">Modelo de dados do produto</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna o produto deletado.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:VendaController.GetVendasAsync(System.UInt32,System.UInt32)">
            <summary>
            Lista de Vendas Cadastradas
            </summary>
            <param name="pageNumber">pageNumber</param>
            <param name="pageSize">pageSize</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna a lista de vendas cadastradas.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:VendaController.GetVendaByIdAsync(System.String)">
            <summary>
            Venda pelo Id
            </summary>
            <param name="id">Id da venda</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna a venda pelo Id.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:VendaController.PostVendaAsync(ApiBrechoRamires.Models.VendaModel)">
            <summary>
            Registrar uma venda
            </summary>
            <returns>Objeto JSON</returns>
            <response code="200">Registra uma venda.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:VendaController.DeleteVendaAsync(System.String)">
            <summary>
            Apagar Venda pelo Id
            </summary>
            <param name="id">Código do produto</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna a venda deletada.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
        <member name="M:VendaController.EditVendaAsync(System.String,ApiBrechoRamires.Models.VendaModel)">
            <summary>
            Editar Venda pelo Id
            </summary>
            <param name="id">Id da venda</param>
            <param name="model">Modelo de dados do produto</param>
            <returns>Objeto JSON</returns>
            <response code="200">Retorna o produto deletado.</response>
            <response code="400">Se os dados forem Inválidos.</response>
            <response code="401">Não autorizado.</response>
            <response code="403">Acesso negado.</response>
            <response code="417">Se os dados forem Inválidos.</response>
            <response code="500">Se houver algum problema com o servidor.</response>
        </member>
    </members>
</doc>
